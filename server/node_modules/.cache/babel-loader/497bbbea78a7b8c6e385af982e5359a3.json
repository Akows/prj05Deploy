{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useContext, useEffect } from 'react'; // import { useEffect, useState } from 'react';\n\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\nimport StateManager from './pages/stateManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLogin, setIsLogin] = useState(false);\n  // const [whoLogin, setWhoLogin] = useState('익명사용자');\n  const logininfo = useContext(StateManager);\n  useEffect(() => {\n    // 웹이 실행되면 가장 먼저 isLogin을 flase로 초기화.\n    logininfo.setIsLogin(false); // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n\n    if (sessionStorage.getItem('MEMBER_ID') === null) {\n      logininfo.setWhoLogin('익명사용자');\n    } else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n      logininfo.setIsLogin(true);\n      logininfo.setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <ContextProvider>\n    //   <BrowserRouter>\n    //     <Menubar isLogin={isLogin}/>\n    //     <Routes>\n    //       <Route path='/' element={<Main/>}/>\n    //       <Route path='/api' element={<Callapi/>}/>\n    //       <Route path='/todolist' element={<Todolist/>}/>\n    //       <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/boardview/:BOARD_NUMBER' element={<Boardview isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //     </Routes>\n    //   </BrowserRouter>\n    // </ContextProvider>\n    _jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/api\",\n          element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todolist\",\n          element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/board\",\n          element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boardview/:BOARD_NUMBER\",\n          element: /*#__PURE__*/_jsxDEV(Boardview, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/member\",\n          element: /*#__PURE__*/_jsxDEV(Member, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"ABMP3mKRaVb2KcNgol5gdmRezmc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useContext","useEffect","Menubar","Main","Callapi","Todolist","Board","Boardview","Member","StateManager","App","logininfo","setIsLogin","sessionStorage","getItem","setWhoLogin"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useContext, useEffect } from 'react';\n\n// import { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\n\nimport StateManager from './pages/stateManager';\n\nfunction App() {\n\n  // const [isLogin, setIsLogin] = useState(false);\n  // const [whoLogin, setWhoLogin] = useState('익명사용자');\n\n  const logininfo = useContext(StateManager);\n\n  useEffect(() => {\n    // 웹이 실행되면 가장 먼저 isLogin을 flase로 초기화.\n      logininfo.setIsLogin(false);\n\n    // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n    if (sessionStorage.getItem('MEMBER_ID') === null) {\n      logininfo.setWhoLogin('익명사용자');\n    } \n    else {\n    // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n      logininfo.setIsLogin(true);\n      logininfo.setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n}, [])\n\n  return (\n    // <ContextProvider>\n    //   <BrowserRouter>\n    //     <Menubar isLogin={isLogin}/>\n    //     <Routes>\n    //       <Route path='/' element={<Main/>}/>\n    //       <Route path='/api' element={<Callapi/>}/>\n    //       <Route path='/todolist' element={<Todolist/>}/>\n    //       <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/boardview/:BOARD_NUMBER' element={<Boardview isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //     </Routes>\n    //   </BrowserRouter>\n    // </ContextProvider>\n\n    <BrowserRouter>\n      <Menubar/>\n      <Routes>\n        <Route path='/' element={<Main/>}/>\n        <Route path='/api' element={<Callapi/>}/>\n        <Route path='/todolist' element={<Todolist/>}/>\n        <Route path='/board' element={<Board/>}/>\n        <Route path='/boardview/:BOARD_NUMBER' element={<Boardview/>}/>\n        <Route path='/member' element={<Member/>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC,C,CAEA;;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA;EAEA,MAAMC,SAAS,GAAGX,UAAU,CAACS,YAAD,CAA5B;EAEAR,SAAS,CAAC,MAAM;IACd;IACEU,SAAS,CAACC,UAAV,CAAqB,KAArB,EAFY,CAId;IACA;;IACA,IAAIC,cAAc,CAACC,OAAf,CAAuB,WAAvB,MAAwC,IAA5C,EAAkD;MAChDH,SAAS,CAACI,WAAV,CAAsB,OAAtB;IACD,CAFD,MAGK;MACL;MACEJ,SAAS,CAACC,UAAV,CAAqB,IAArB;MACAD,SAAS,CAACI,WAAV,CAAsBF,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAtB;IACD;EACJ,CAdU,EAcR,EAdQ,CAAT;EAgBA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,QAAC,aAAD;MAAA,wBACE,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,IAAI,EAAC,MAAZ;UAAmB,OAAO,eAAE,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,KAAD;UAAO,IAAI,EAAC,WAAZ;UAAwB,OAAO,eAAE,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA;QAAjC;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE,QAAC,KAAD;UAAO,IAAI,EAAC,QAAZ;UAAqB,OAAO,eAAE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QAA9B;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,KAAD;UAAO,IAAI,EAAC,0BAAZ;UAAuC,OAAO,eAAE,QAAC,SAAD;YAAA;YAAA;YAAA;UAAA;QAAhD;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,KAAD;UAAO,IAAI,EAAC,SAAZ;UAAsB,OAAO,eAAE,QAAC,MAAD;YAAA;YAAA;YAAA;UAAA;QAA/B;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAfF;AA2BD;;GAlDQJ,G;;KAAAA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}