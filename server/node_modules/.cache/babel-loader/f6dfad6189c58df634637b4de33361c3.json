{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport React, { createContext, useState } from 'react';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport BoardViewandMod from './pages/boardviewandmod';\nimport Login from './pages/login';\nimport Join from './pages/join';\nimport Test from './components/test'; // 전역 상태 관리를 위한 ContextAPI 사용을 위해 createContext()을 사용, 빈 Context를 생성.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const myContext = /*#__PURE__*/createContext('defaultvalue');\n\nfunction App() {\n  _s();\n\n  // 로그인 값은 최상단 App에서 제어하면서 필요한 컴포넌트로 내려보내주어야 함.\n  // 따라서 로그인 값을 제어할 변수를 useState로 생성.\n  // 로그인한 유저의 아이디를 제어할 whoIsLogin.\n  const [whoIsLogin, setwhoIsLogin] = useState('비로그인사용자'); // 로그인 상태를 제어할 loginStatus.\n\n  const [loginStatus, setLoginStatus] = useState(false); // React.useEffect(() => {\n  // }, [])\n  // Login 페이지에서 App으로 로그인 값을 넘겨줄 함수.\n\n  const receiveLoginStatus = data => {\n    console.log('isLogin : ', data);\n    setLoginStatus(data);\n  }; // Login 페이지에서 App으로 사용자 이름을 넘겨줄 함수.\n\n\n  const receiveLoginID = data => {\n    console.log('whoLogin : ', data);\n    setwhoIsLogin(data);\n  }; // sessionStorage 방식 로그인 기능.\n  // 로그인 방식을 JWT로 변경하면서 더 이상 사용하지 않음.\n  //   // 로그인 여부 값과 로그인 한 사용자 이름을 관리하기 위한 isLogin / whoLogin 변수를 useState로 관리.\n  //   const [isLogin, setIsLogin] = useState('');\n  //   const [whoLogin, setWhoLogin] = useState('');\n  //   React.useEffect(() => {\n  //     // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n  //         setIsLogin(false);\n  //     // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n  //     // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n  //     if (sessionStorage.getItem('MEMBER_ID') === null) {\n  //         setWhoLogin('익명사용자');\n  //     } \n  //     else {\n  //     // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n  //         setIsLogin(true);\n  //         setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n  //     }\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(myContext.Provider, {\n      value: {\n        whoIsLogin,\n        setwhoIsLogin,\n        loginStatus,\n        setLoginStatus\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/api\",\n            element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todolist\",\n            element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/board\",\n            element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/boardview/:BOARD_NUMBER\",\n            element: /*#__PURE__*/_jsxDEV(BoardViewandMod, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              sendLoginStatus: receiveLoginStatus,\n              sendLoginID: receiveLoginID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/join\",\n            element: /*#__PURE__*/_jsxDEV(Join, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/test\",\n            element: /*#__PURE__*/_jsxDEV(Test, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"Yg4iJrWxKddpwh8VbnmLiR1y2+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","React","createContext","useState","Menubar","Main","Callapi","Todolist","Board","BoardViewandMod","Login","Join","Test","myContext","App","whoIsLogin","setwhoIsLogin","loginStatus","setLoginStatus","receiveLoginStatus","data","console","log","receiveLoginID"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport React, { createContext, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport BoardViewandMod from './pages/boardviewandmod';\nimport Login from './pages/login';\nimport Join from './pages/join';\nimport Test from './components/test';\n\n// 전역 상태 관리를 위한 ContextAPI 사용을 위해 createContext()을 사용, 빈 Context를 생성.\nexport const myContext = createContext('defaultvalue');\n\nfunction App() {\n\n  // 로그인 값은 최상단 App에서 제어하면서 필요한 컴포넌트로 내려보내주어야 함.\n  // 따라서 로그인 값을 제어할 변수를 useState로 생성.\n  // 로그인한 유저의 아이디를 제어할 whoIsLogin.\n  const [whoIsLogin, setwhoIsLogin] = useState('비로그인사용자');\n  // 로그인 상태를 제어할 loginStatus.\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  // React.useEffect(() => {\n\n  // }, [])\n\n  // Login 페이지에서 App으로 로그인 값을 넘겨줄 함수.\n  const receiveLoginStatus = (data) => {\n    console.log('isLogin : ', data);\n    setLoginStatus(data);\n  }\n  // Login 페이지에서 App으로 사용자 이름을 넘겨줄 함수.\n  const receiveLoginID = (data) => {\n    console.log('whoLogin : ', data);\n    setwhoIsLogin(data);\n  }\n\n// sessionStorage 방식 로그인 기능.\n// 로그인 방식을 JWT로 변경하면서 더 이상 사용하지 않음.\n//   // 로그인 여부 값과 로그인 한 사용자 이름을 관리하기 위한 isLogin / whoLogin 변수를 useState로 관리.\n//   const [isLogin, setIsLogin] = useState('');\n//   const [whoLogin, setWhoLogin] = useState('');\n\n//   React.useEffect(() => {\n//     // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n//         setIsLogin(false);\n\n//     // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n//     // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n//     if (sessionStorage.getItem('MEMBER_ID') === null) {\n//         setWhoLogin('익명사용자');\n//     } \n//     else {\n//     // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n//         setIsLogin(true);\n//         setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n//     }\n// }, [])\n\n  return (\n    <> \n      <myContext.Provider value={{ whoIsLogin, setwhoIsLogin, loginStatus, setLoginStatus }}>\n        <BrowserRouter>\n          <Menubar/>\n          <Routes>\n            <Route path='/' element={<Main/>}/>\n            <Route path='/api' element={<Callapi/>}/>\n            <Route path='/todolist' element={<Todolist/>}/>\n            <Route path='/board' element={<Board/>}/>\n            <Route path='/boardview/:BOARD_NUMBER' element={<BoardViewandMod/>}/>\n            <Route path='/login' element={<Login sendLoginStatus={receiveLoginStatus} sendLoginID={receiveLoginID}/>}/>\n            <Route path='/join' element={<Join/>}/>\n\n            <Route path='/test' element={<Test/>}/>\n          </Routes>\n        </BrowserRouter>\n      </myContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}