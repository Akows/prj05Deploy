{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport '../style/Login.css';\nimport '../style/GlobalStyle.css';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  // 로그인에 필요한 데이터를 변수로 제어할 useState 사용.\n  const [inputID, setInputID] = useState('');\n  const [inputPW, setInputPW] = useState(''); // 로그인 Event.\n\n  const loginEvent = () => {\n    // 정보 입력란이 하나라도 비어있으면 경고를 출력하고 기능 정지.\n    if (inputID === '' || inputPW === '') {\n      alert('아이디 혹은 비밀번호가 입력되지 않았습니다.');\n    } // 그렇지 않으면 다음 작업으로 이동.\n    else {\n      axios.post('/prj05/member/login', null, {\n        params: {\n          'MEMBER_ID': inputID,\n          'MEMBER_PW': inputPW\n        }\n      }) // 작업이 완료되었을 경우, 로그인 값과 사용자 이름을 상단 App으로 전송.\n      .then(res => {\n        // 인증이 실패한 경우\n        if (!res.data.auth) {\n          props.sendLoginStatus(false);\n        } // 인증이 성공한 경우\n        else {\n          // 토큰을 로컬스토리지에 저장.\n          localStorage.setItem('token', res.data.token); // 토큰 유효성 검사 실행\n\n          axios.get('/prj05/member/auth', {\n            headers: {\n              \"x-access-token\": localStorage.getItem('token')\n            }\n          }) // 유효성 검사를 통과했을 경우\n          // 로그인 상태를 true로 변경하고 App으로 전송.\n          .then(res => {\n            props.sendLoginID(inputID);\n            props.sendLoginStatus(true);\n          }) // 에러가 발생했을 경우.\n          .catch(res => {\n            console.log(res);\n          });\n        }\n      }) // 에러가 발생했을 경우.\n      .catch(res => {\n        alert(res.data.SystemMessage);\n        props.sendLoginStatus(false);\n      });\n    }\n  }; // 비로그인 사용시 로그인 값과 사용자 이름을 상단 App으로 전송하는 함수.\n\n\n  const anonymousUse = () => {\n    props.sendLoginStatus(true);\n    props.sendLoginID('비로그인사용자');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-pagebackground setcenter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-pageinner setcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-formarea gifont\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-title setcenter\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uC0AC\\uC6A9\\uC790 \\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"login-inputtag gifont\",\n              value: inputID,\n              placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              onChange: e => {\n                setInputID(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"login-inputtag gifont\",\n              value: inputPW,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              onChange: e => {\n                setInputPW(e.target.value);\n              },\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-button\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"login-buttontag gifont\",\n                onClick: loginEvent,\n                children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/join',\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"login-buttontag gifont\",\n                  children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: '/main',\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"login-buttontag gifont\",\n                  onClick: anonymousUse,\n                  children: \"\\uBE44\\uB85C\\uADF8\\uC778\\uC0AC\\uC6A9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"7GstqpVraiummC+SiiP9kKaOlOY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Link","axios","Login","props","inputID","setInputID","inputPW","setInputPW","loginEvent","alert","post","params","then","res","data","auth","sendLoginStatus","localStorage","setItem","token","get","headers","getItem","sendLoginID","catch","console","log","SystemMessage","anonymousUse","e","target","value"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/login.js"],"sourcesContent":["import '../style/Login.css';\r\nimport '../style/GlobalStyle.css';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Login = (props) => {\r\n\r\n    // 로그인에 필요한 데이터를 변수로 제어할 useState 사용.\r\n    const [inputID, setInputID] = useState('');\r\n    const [inputPW, setInputPW] = useState('');\r\n\r\n\r\n    // 로그인 Event.\r\n    const loginEvent = () => {\r\n        // 정보 입력란이 하나라도 비어있으면 경고를 출력하고 기능 정지.\r\n        if (inputID === '' || inputPW === '') {\r\n            alert('아이디 혹은 비밀번호가 입력되지 않았습니다.');\r\n        }\r\n        // 그렇지 않으면 다음 작업으로 이동.\r\n        else {\r\n            axios.post('/prj05/member/login', null, {\r\n                params: {\r\n                    'MEMBER_ID': inputID,\r\n                    'MEMBER_PW': inputPW\r\n                }\r\n            })\r\n            // 작업이 완료되었을 경우, 로그인 값과 사용자 이름을 상단 App으로 전송.\r\n            .then(res => {\r\n                // 인증이 실패한 경우\r\n                if (!res.data.auth) {\r\n                    props.sendLoginStatus(false);\r\n                }\r\n                // 인증이 성공한 경우\r\n                else {\r\n                    // 토큰을 로컬스토리지에 저장.\r\n                    localStorage.setItem('token', res.data.token);\r\n\r\n                    // 토큰 유효성 검사 실행\r\n                    axios.get('/prj05/member/auth', {\r\n                        headers: {\r\n                            \"x-access-token\": localStorage.getItem('token'),\r\n                        }})\r\n                        // 유효성 검사를 통과했을 경우\r\n                        // 로그인 상태를 true로 변경하고 App으로 전송.\r\n                        .then((res) => {\r\n                            props.sendLoginID(inputID);\r\n                            props.sendLoginStatus(true);\r\n                        })\r\n                        // 에러가 발생했을 경우.\r\n                        .catch(res => {\r\n                            console.log(res);\r\n                        })\r\n                }\r\n            })\r\n            // 에러가 발생했을 경우.\r\n            .catch(res => {\r\n                alert(res.data.SystemMessage);\r\n                props.sendLoginStatus(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    // 비로그인 사용시 로그인 값과 사용자 이름을 상단 App으로 전송하는 함수.\r\n    const anonymousUse = () => {\r\n        props.sendLoginStatus(true);\r\n        props.sendLoginID('비로그인사용자');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='login-pagebackground setcenter'>\r\n                <div className='login-pageinner setcenter'>\r\n                    <div className='login-formarea gifont'>\r\n                        <div className='login-title setcenter'>\r\n                            <h1>사용자 로그인</h1>\r\n                        </div>\r\n                        <div className='login-input'>\r\n                            <input type='text' className='login-inputtag gifont' value={inputID} placeholder='아이디를 입력해주세요' onChange={(e) => {setInputID(e.target.value)}}/>\r\n                            <input type='password' className='login-inputtag gifont' value={inputPW} placeholder='비밀번호를 입력해주세요' onChange={(e) => {setInputPW(e.target.value)}} autoComplete='off'/>\r\n                            <div className='login-button'>\r\n                                <button className='login-buttontag gifont' onClick={loginEvent}>로그인하기</button>\r\n                                <Link to={'/join'}>\r\n                                <button className='login-buttontag gifont'>회원가입하기</button>\r\n                                </Link>\r\n                                <Link to={'/main'}>\r\n                                <button className='login-buttontag gifont' onClick={anonymousUse}>비로그인사용</button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}