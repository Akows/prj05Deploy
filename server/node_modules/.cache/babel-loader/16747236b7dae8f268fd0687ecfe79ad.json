{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\pages\\\\member.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { myContext } from '../App';\nimport MemberInfo from '../components/memberinfo';\nimport MemberLogin from '../components/memberlogin';\nimport MemberJoin from '../components/memberjoin';\nimport '../style/Member.css'; // 1. 메뉴바에서 'componentvalue'의 이름으로 출력될 컴포넌트를 판별.\n// 2. App.js에서 로그인 여부와 로그인 한 사용자의 아이디 값이 넘어옴.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Member = () => {\n  _s();\n\n  var _location$state;\n\n  const loginInfo = useContext(myContext); // 1번값은 Link로 넘어오는 값이기 때문에 useLocation를 이용하여 값을 받아 사용한다.\n\n  const location = useLocation();\n  const componentvalue = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.value; // 1번값을 componentvalue에 넣어 알맞은 컴포넌트를 출력해준다.\n  // 2번값은 value로 넘어오는 값으로 하위 컴포넌트로 전달해준다.\n\n  if (componentvalue === 'memberinfo') return /*#__PURE__*/_jsxDEV(MemberInfo, {\n    isLogin: loginInfo.isLogin,\n    whoLogin: loginInfo.whoLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 16\n  }, this);else if (componentvalue === 'memberlogin') return /*#__PURE__*/_jsxDEV(MemberLogin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 16\n  }, this);else if (componentvalue === 'memberjoin') return /*#__PURE__*/_jsxDEV(MemberJoin, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 16\n  }, this);else return '에러가 발생했습니다.';\n};\n\n_s(Member, \"RoaHvlVpgWiHHVLFAumuo+krMsY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Member;\nexport default Member;\n\nvar _c;\n\n$RefreshReg$(_c, \"Member\");","map":{"version":3,"names":["React","useContext","useLocation","myContext","MemberInfo","MemberLogin","MemberJoin","Member","loginInfo","location","componentvalue","state","value","isLogin","whoLogin"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/member.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { myContext } from '../App';\r\n\r\nimport MemberInfo from '../components/memberinfo';\r\nimport MemberLogin from '../components/memberlogin';\r\nimport MemberJoin from '../components/memberjoin';\r\n\r\nimport '../style/Member.css';\r\n\r\n\r\n// 1. 메뉴바에서 'componentvalue'의 이름으로 출력될 컴포넌트를 판별.\r\n// 2. App.js에서 로그인 여부와 로그인 한 사용자의 아이디 값이 넘어옴.\r\nconst Member = () => {\r\n    const loginInfo = useContext(myContext);\r\n\r\n    // 1번값은 Link로 넘어오는 값이기 때문에 useLocation를 이용하여 값을 받아 사용한다.\r\n    const location = useLocation();\r\n\tconst componentvalue = location.state?.value;\r\n\r\n    // 1번값을 componentvalue에 넣어 알맞은 컴포넌트를 출력해준다.\r\n    // 2번값은 value로 넘어오는 값으로 하위 컴포넌트로 전달해준다.\r\n    if (componentvalue === 'memberinfo')\r\n        return <MemberInfo isLogin={loginInfo.isLogin} whoLogin={loginInfo.whoLogin}/>;\r\n    else if (componentvalue === 'memberlogin')\r\n        return <MemberLogin/>;\r\n    else if (componentvalue === 'memberjoin')\r\n        return <MemberJoin/>;\r\n    else\r\n        return '에러가 발생했습니다.';\r\n}\r\n\r\nexport default Member;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,qBAAP,C,CAGA;AACA;;;;AACA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAAA;;EACjB,MAAMC,SAAS,GAAGP,UAAU,CAACE,SAAD,CAA5B,CADiB,CAGjB;;EACA,MAAMM,QAAQ,GAAGP,WAAW,EAA5B;EACH,MAAMQ,cAAc,sBAAGD,QAAQ,CAACE,KAAZ,oDAAG,gBAAgBC,KAAvC,CALoB,CAOjB;EACA;;EACA,IAAIF,cAAc,KAAK,YAAvB,EACI,oBAAO,QAAC,UAAD;IAAY,OAAO,EAAEF,SAAS,CAACK,OAA/B;IAAwC,QAAQ,EAAEL,SAAS,CAACM;EAA5D;IAAA;IAAA;IAAA;EAAA,QAAP,CADJ,KAEK,IAAIJ,cAAc,KAAK,aAAvB,EACD,oBAAO,QAAC,WAAD;IAAA;IAAA;IAAA;EAAA,QAAP,CADC,KAEA,IAAIA,cAAc,KAAK,YAAvB,EACD,oBAAO,QAAC,UAAD;IAAA;IAAA;IAAA;EAAA,QAAP,CADC,KAGD,OAAO,aAAP;AACP,CAjBD;;GAAMH,M;UAIeL,W;;;KAJfK,M;AAmBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}