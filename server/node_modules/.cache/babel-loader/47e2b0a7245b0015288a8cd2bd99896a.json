{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Member from './pages/member';\nimport Boardcreate from './components/boardcreate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [whoLogin, setWhoLogin] = useState(false);\n  useEffect(() => {\n    // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n    if (sessionStorage.getItem('MEMBER_ID') === null) {} else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n      setIsLogin(true);\n      setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n  }, [isLogin]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menubar, {\n        isLogin: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/api\",\n          element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/todolist\",\n          element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/board\",\n          element: /*#__PURE__*/_jsxDEV(Board, {\n            isLogin: isLogin,\n            whoLogin: whoLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/boardcreate\",\n          element: /*#__PURE__*/_jsxDEV(Boardcreate, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/member\",\n          element: /*#__PURE__*/_jsxDEV(Member, {\n            isLogin: isLogin,\n            whoLogin: whoLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"1q20XaLbA5Hv2tJVvSLkSvGtvVs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Menubar","Main","Callapi","Todolist","Board","Member","Boardcreate","App","isLogin","setIsLogin","whoLogin","setWhoLogin","sessionStorage","getItem"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Member from './pages/member';\n\nimport Boardcreate from './components/boardcreate';\n\nfunction App() {\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [whoLogin, setWhoLogin] = useState(false);\n\n  useEffect(() => {\n      // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n      // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n      if (sessionStorage.getItem('MEMBER_ID') === null) {\n          \n      } \n      else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n          setIsLogin(true);\n          setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n      }\n  }, [isLogin])\n\n  return (\n    <>\n      <BrowserRouter>\n        <Menubar isLogin={isLogin}/>\n        <Routes>\n          <Route path='/' element={<Main/>}/>\n          <Route path='/api' element={<Callapi/>}/>\n          <Route path='/todolist' element={<Todolist/>}/>\n          <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n          <Route path='/boardcreate' element={<Boardcreate/>}/>\n          <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n        </Routes>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;EAEAD,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIc,cAAc,CAACC,OAAf,CAAuB,WAAvB,MAAwC,IAA5C,EAAkD,CAEjD,CAFD,MAGK;MACL;MACA;MACIJ,UAAU,CAAC,IAAD,CAAV;MACAE,WAAW,CAACC,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,CAAX;IACH;EACJ,CAZQ,EAYN,CAACL,OAAD,CAZM,CAAT;EAcA,oBACE;IAAA,uBACE,QAAC,aAAD;MAAA,wBACE,QAAC,OAAD;QAAS,OAAO,EAAEA;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,MAAD;QAAA,wBACE,QAAC,KAAD;UAAO,IAAI,EAAC,GAAZ;UAAgB,OAAO,eAAE,QAAC,IAAD;YAAA;YAAA;YAAA;UAAA;QAAzB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAO,IAAI,EAAC,MAAZ;UAAmB,OAAO,eAAE,QAAC,OAAD;YAAA;YAAA;YAAA;UAAA;QAA5B;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE,QAAC,KAAD;UAAO,IAAI,EAAC,WAAZ;UAAwB,OAAO,eAAE,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA;QAAjC;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE,QAAC,KAAD;UAAO,IAAI,EAAC,QAAZ;UAAqB,OAAO,eAAE,QAAC,KAAD;YAAO,OAAO,EAAEA,OAAhB;YAAyB,QAAQ,EAAEE;UAAnC;YAAA;YAAA;YAAA;UAAA;QAA9B;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE,QAAC,KAAD;UAAO,IAAI,EAAC,cAAZ;UAA2B,OAAO,eAAE,QAAC,WAAD;YAAA;YAAA;YAAA;UAAA;QAApC;UAAA;UAAA;UAAA;QAAA,QALF,eAME,QAAC,KAAD;UAAO,IAAI,EAAC,SAAZ;UAAsB,OAAO,eAAE,QAAC,MAAD;YAAQ,OAAO,EAAEF,OAAjB;YAA0B,QAAQ,EAAEE;UAApC;YAAA;YAAA;YAAA;UAAA;QAA/B;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAeD;;GAlCQH,G;;KAAAA,G;AAoCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}