{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\components\\\\todoListAdd(DB).js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport axios from 'axios';\nimport '../style/TodoListAdd.css';\nimport '../style/GlobalStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoListAddDB = props => {\n  _s();\n\n  // 사용자 ID를 제어하는 변수.\n  const [memberID, setmemberID] = useState(''); // 입력한 값을 제어하는 변수.\n\n  const [inputText, setinputText] = useState(\"\");\n  const onChange = useCallback(e => {\n    setinputText(e.target.value);\n  }, []);\n\n  const addTodolist = () => {\n    axios.post('/prj05/todo/inserttodo', {\n      params: {\n        'TODO_MEMBER': props.memberID,\n        'TODO_TEXT': inputText\n      }\n    }).then(res => {\n      console.log(res.data.SystemMassage);\n    }).catch(res => {\n      console.log(res.data.SystemMassage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tdl-addform gifont\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tdl-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"tdl-addinput gifont\",\n          placeholder: \"\\uCD94\\uAC00\\uD560 \\uD560 \\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          defaultValue: inputText,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tdl-addbtu gifont\",\n          onClick: addTodolist,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoListAddDB, \"Z0cm9BvQhis1IMCoz3CHpWGVIHc=\");\n\n_c = TodoListAddDB;\nexport default TodoListAddDB;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListAddDB\");","map":{"version":3,"names":["React","useCallback","useState","axios","TodoListAddDB","props","memberID","setmemberID","inputText","setinputText","onChange","e","target","value","addTodolist","post","params","then","res","console","log","data","SystemMassage","catch"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/components/todoListAdd(DB).js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport '../style/TodoListAdd.css';\r\nimport '../style/GlobalStyle.css';\r\n\r\nconst TodoListAddDB = ( props ) => {\r\n\r\n    // 사용자 ID를 제어하는 변수.\r\n    const [memberID, setmemberID] = useState('');   \r\n\r\n    // 입력한 값을 제어하는 변수.\r\n    const [inputText, setinputText] = useState(\"\");\r\n\r\n    const onChange = useCallback(e => {\r\n        setinputText(e.target.value);\r\n    }, []);\r\n\r\n    const addTodolist = () => {\r\n\r\n        axios\r\n        .post('/prj05/todo/inserttodo', {\r\n            params: {\r\n                'TODO_MEMBER': props.memberID,\r\n                'TODO_TEXT': inputText,\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res.data.SystemMassage);\r\n        })\r\n        .catch(res => {\r\n            console.log(res.data.SystemMassage);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='tdl-addform gifont'>\r\n                <div className=\"tdl-form\">\r\n                    <input className=\"tdl-addinput gifont\" placeholder=\"추가할 할 일을 입력하세요\" defaultValue={inputText} onChange={onChange}/>\r\n                    <button className=\"tdl-addbtu gifont\" onClick={addTodolist}>\r\n                        <h2>추가</h2>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoListAddDB;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,0BAAP;AACA,OAAO,0BAAP;;;;AAEA,MAAMC,aAAa,GAAKC,KAAF,IAAa;EAAA;;EAE/B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC,CAH+B,CAK/B;;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMQ,QAAQ,GAAGT,WAAW,CAACU,CAAC,IAAI;IAC9BF,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;EACH,CAF2B,EAEzB,EAFyB,CAA5B;;EAIA,MAAMC,WAAW,GAAG,MAAM;IAEtBX,KAAK,CACJY,IADD,CACM,wBADN,EACgC;MAC5BC,MAAM,EAAE;QACJ,eAAeX,KAAK,CAACC,QADjB;QAEJ,aAAaE;MAFT;IADoB,CADhC,EAOCS,IAPD,CAOMC,GAAG,IAAI;MACTC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,aAArB;IACH,CATD,EAUCC,KAVD,CAUOL,GAAG,IAAI;MACVC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,aAArB;IACH,CAZD;EAaH,CAfD;;EAiBA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,oBAAf;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,wBACI;UAAO,SAAS,EAAC,qBAAjB;UAAuC,WAAW,EAAC,uEAAnD;UAAoE,YAAY,EAAEd,SAAlF;UAA6F,QAAQ,EAAEE;QAAvG;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,SAAS,EAAC,mBAAlB;UAAsC,OAAO,EAAEI,WAA/C;UAAA,uBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAYH,CAzCD;;GAAMV,a;;KAAAA,a;AA2CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}