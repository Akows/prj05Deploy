{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport React, { createContext, useState } from 'react';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport BoardViewandMod from './pages/boardviewandmod';\nimport Member from './pages/member';\nimport Login from './pages/login';\nimport Join from './pages/join'; // 전역 상태 관리를 위한 ContextAPI 사용을 위해 createContext()을 사용, 빈 Context를 생성.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const myContext = /*#__PURE__*/createContext('defaultvalue');\n\nfunction App() {\n  _s();\n\n  // 로그인 값은 최상단 App에서 제어하면서 필요한 컴포넌트로 내려보내주어야 함.\n  // 따라서 로그인 값을 제어할 변수를 useState로 생성.\n  // 로그인한 유저의 아이디를 제어할 whoIsLogin.\n  const [whoIsLogin, setwhoIsLogin] = useState('비로그인사용자'); // 로그인 상태를 제어할 loginStatus.\n\n  const [loginStatus, setLoginStatus] = useState(false); // Login 페이지에서 App으로 로그인 값을 넘겨줄 함수.\n\n  const receiveLoginStatus = data => {\n    console.log('isLogin : ', data);\n    setLoginStatus(data);\n  }; // 로그인 여부 값과 로그인 한 사용자 이름을 관리하기 위한 isLogin / whoLogin 변수를 useState로 관리.\n\n\n  const [isLogin, setIsLogin] = useState('');\n  const [whoLogin, setWhoLogin] = useState('');\n  React.useEffect(() => {\n    // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n    setIsLogin(false); // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n\n    if (sessionStorage.getItem('MEMBER_ID') === null) {\n      setWhoLogin('익명사용자');\n    } else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n      setIsLogin(true);\n      setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(myContext.Provider, {\n      value: {\n        isLogin,\n        setIsLogin,\n        whoLogin,\n        setWhoLogin\n      },\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: loginStatus !== true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Login, {\n                sendLoginStatus: receiveLoginStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/join\",\n              element: /*#__PURE__*/_jsxDEV(Join, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/api\",\n              element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/todolist\",\n              element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/board\",\n              element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/boardview/:BOARD_NUMBER\",\n              element: /*#__PURE__*/_jsxDEV(BoardViewandMod, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/member\",\n              element: /*#__PURE__*/_jsxDEV(Member, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"gF4wLiZ30zUnFCxWSMsC2Lqor6g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","React","createContext","useState","Menubar","Main","Callapi","Todolist","Board","BoardViewandMod","Member","Login","Join","myContext","App","whoIsLogin","setwhoIsLogin","loginStatus","setLoginStatus","receiveLoginStatus","data","console","log","isLogin","setIsLogin","whoLogin","setWhoLogin","useEffect","sessionStorage","getItem"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport React, { createContext, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport BoardViewandMod from './pages/boardviewandmod';\nimport Member from './pages/member';\nimport Login from './pages/login';\nimport Join from './pages/join';\n\n// 전역 상태 관리를 위한 ContextAPI 사용을 위해 createContext()을 사용, 빈 Context를 생성.\nexport const myContext = createContext('defaultvalue');\n\nfunction App() {\n\n  // 로그인 값은 최상단 App에서 제어하면서 필요한 컴포넌트로 내려보내주어야 함.\n  // 따라서 로그인 값을 제어할 변수를 useState로 생성.\n  // 로그인한 유저의 아이디를 제어할 whoIsLogin.\n  const [whoIsLogin, setwhoIsLogin] = useState('비로그인사용자');\n  // 로그인 상태를 제어할 loginStatus.\n  const [loginStatus, setLoginStatus] = useState(false);\n\n  // Login 페이지에서 App으로 로그인 값을 넘겨줄 함수.\n  const receiveLoginStatus = (data) => {\n    console.log('isLogin : ', data);\n    setLoginStatus(data);\n  }\n\n  // 로그인 여부 값과 로그인 한 사용자 이름을 관리하기 위한 isLogin / whoLogin 변수를 useState로 관리.\n  const [isLogin, setIsLogin] = useState('');\n  const [whoLogin, setWhoLogin] = useState('');\n\n  React.useEffect(() => {\n    // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n        setIsLogin(false);\n\n    // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n    if (sessionStorage.getItem('MEMBER_ID') === null) {\n        setWhoLogin('익명사용자');\n    } \n    else {\n    // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n        setIsLogin(true);\n        setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n}, [])\n\n  return (\n    <> \n      <myContext.Provider value={ {isLogin, setIsLogin, whoLogin, setWhoLogin} }>\n        <BrowserRouter>\n\n          {/* 사용자가 로그인을 하지 않았을 경우 */}\n          {loginStatus !== true ? \n\n          <>\n            <Routes>\n                <Route path='/' element={<Login sendLoginStatus={receiveLoginStatus}/>}/>\n                <Route path='/join' element={<Join/>}/>\n            </Routes>\n          </>\n          \n\n          : \n            <>\n              <Menubar/>\n              <Routes>\n                <Route path='/' element={<Main/>}/>\n                <Route path='/api' element={<Callapi/>}/>\n                <Route path='/todolist' element={<Todolist/>}/>\n                <Route path='/board' element={<Board/>}/>\n                <Route path='/boardview/:BOARD_NUMBER' element={<BoardViewandMod/>}/>\n                <Route path='/member' element={<Member/>}/>\n\n\n              </Routes>\n            </>\n          }\n\n        </BrowserRouter>\n      </myContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}