{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from 'react';\nimport '../style/Callapi.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Callapi = _ref => {\n  _s();\n\n  let {\n    list,\n    total\n  } = _ref;\n  const obsRef = useRef(null); //observer Element\n\n  const [List, setList] = useState(() => list); //Post List\n\n  const [page, setPage] = useState(1); //현재 페이지\n\n  const [load, setLoad] = useState(false); //로딩 스피너\n\n  const preventRef = useRef(true); //옵저버 중복 실행 방지\n\n  const endRef = useRef(false); //모든 글 로드 확인\n\n  useEffect(() => {\n    //옵저버 생성\n    const observer = new IntersectionObserver(obsHandler, {\n      threshold: 0.5\n    });\n    if (obsRef.current) observer.observe(obsRef.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    getPost();\n  }, [page]);\n\n  const obsHandler = entries => {\n    //옵저버 콜백함수\n    const target = entries[0];\n\n    if (!endRef.current && target.isIntersecting && preventRef.current) {\n      //옵저버 중복 실행 방지\n      preventRef.current = false; //옵저버 중복 실행 방지\n\n      setPage(prev => prev + 1); //페이지 값 증가\n    }\n  };\n\n  const getPost = useCallback(async () => {\n    //글 불러오기  \n    setLoad(true); //로딩 시작\n    // ---- Get Data Code ---\n\n    const res = await axios({\n      method: 'GET',\n      url: `/api/db/post/read/list/?page=${page}`\n    });\n\n    if (res.data) {\n      if (res.data.end) {\n        //마지막 페이지일 경우\n        endRef.current = true;\n        noPostShow();\n      }\n\n      setList(prev => [...prev, ...res.data.list]); //리스트 추가\n\n      prevent_duple.current = true;\n    } else {\n      console.log(res); //error\n    }\n\n    setLoad(false); //로딩 종료\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Callapi, \"OxkEeM6jJY5BqP/jU29HJu3ZwlE=\");\n\n_c = Callapi;\nexport default Callapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Callapi\");","map":{"version":3,"names":["useCallback","useEffect","Callapi","list","total","obsRef","useRef","List","setList","useState","page","setPage","load","setLoad","preventRef","endRef","observer","IntersectionObserver","obsHandler","threshold","current","observe","disconnect","getPost","entries","target","isIntersecting","prev","res","axios","method","url","data","end","noPostShow","prevent_duple","console","log"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/callapi.js"],"sourcesContent":["\r\nimport { useCallback, useEffect } from 'react';\r\nimport '../style/Callapi.css';\r\n\r\nconst Callapi = ({list, total}) => {\r\n\r\n    const obsRef = useRef(null); \t//observer Element\r\n    const [List, setList] = useState(()=> list);\t//Post List\r\n\r\n    const [page, setPage] = useState(1); //현재 페이지\r\n    const [load, setLoad] = useState(false); //로딩 스피너\r\n    const preventRef = useRef(true); //옵저버 중복 실행 방지\r\n    const endRef = useRef(false); //모든 글 로드 확인\r\n\r\n\r\n    useEffect(()=> { //옵저버 생성\r\n        const observer = new IntersectionObserver(obsHandler, { threshold : 0.5 });\r\n        if(obsRef.current) observer.observe(obsRef.current);\r\n        return () => { observer.disconnect(); }\r\n    }, [])\r\n\r\n\r\n    useEffect(()=> {\r\n        getPost();\r\n    }, [page])\r\n\r\n\r\n    const obsHandler = ((entries) => { //옵저버 콜백함수\r\n        const target = entries[0];\r\n        if(!endRef.current && target.isIntersecting && preventRef.current){ //옵저버 중복 실행 방지\r\n          preventRef.current = false; //옵저버 중복 실행 방지\r\n          setPage(prev => prev+1 ); //페이지 값 증가\r\n        }\r\n    })\r\n\r\n    const getPost = useCallback(async() => { //글 불러오기  \r\n\r\n      setLoad(true); //로딩 시작\r\n\r\n    // ---- Get Data Code ---\r\n\tconst res = await axios({method : 'GET', url : `/api/db/post/read/list/?page=${page}`});\r\n      if(res.data){\r\n          if(res.data.end){ //마지막 페이지일 경우\r\n            endRef.current = true;\r\n            noPostShow();\r\n          }\r\n          setList(prev => [...prev, ...res.data.list]); //리스트 추가\r\n          prevent_duple.current = true;\r\n      }else{\r\n        console.log(res); //error\r\n      }\r\n\r\n      setLoad(false); //로딩 종료\r\n    }, [page]);\r\n\r\n\treturn (\r\n        <>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Callapi;"],"mappings":";;AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAO,sBAAP;;;;AAEA,MAAMC,OAAO,GAAG,QAAmB;EAAA;;EAAA,IAAlB;IAACC,IAAD;IAAOC;EAAP,CAAkB;EAE/B,MAAMC,MAAM,GAAGC,MAAM,CAAC,IAAD,CAArB,CAF+B,CAED;;EAC9B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,MAAKN,IAAN,CAAhC,CAH+B,CAGc;;EAE7C,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,CAAD,CAAhC,CAL+B,CAKM;;EACrC,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC,CAN+B,CAMU;;EACzC,MAAMK,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB,CAP+B,CAOE;;EACjC,MAAMS,MAAM,GAAGT,MAAM,CAAC,KAAD,CAArB,CAR+B,CAQD;;EAG9BL,SAAS,CAAC,MAAK;IAAE;IACb,MAAMe,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,UAAzB,EAAqC;MAAEC,SAAS,EAAG;IAAd,CAArC,CAAjB;IACA,IAAGd,MAAM,CAACe,OAAV,EAAmBJ,QAAQ,CAACK,OAAT,CAAiBhB,MAAM,CAACe,OAAxB;IACnB,OAAO,MAAM;MAAEJ,QAAQ,CAACM,UAAT;IAAwB,CAAvC;EACH,CAJQ,EAIN,EAJM,CAAT;EAOArB,SAAS,CAAC,MAAK;IACXsB,OAAO;EACV,CAFQ,EAEN,CAACb,IAAD,CAFM,CAAT;;EAKA,MAAMQ,UAAU,GAAKM,OAAD,IAAa;IAAE;IAC/B,MAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;IACA,IAAG,CAACT,MAAM,CAACK,OAAR,IAAmBK,MAAM,CAACC,cAA1B,IAA4CZ,UAAU,CAACM,OAA1D,EAAkE;MAAE;MAClEN,UAAU,CAACM,OAAX,GAAqB,KAArB,CADgE,CACpC;;MAC5BT,OAAO,CAACgB,IAAI,IAAIA,IAAI,GAAC,CAAd,CAAP,CAFgE,CAEtC;IAC3B;EACJ,CAND;;EAQA,MAAMJ,OAAO,GAAGvB,WAAW,CAAC,YAAW;IAAE;IAEvCa,OAAO,CAAC,IAAD,CAAP,CAFqC,CAEtB;IAEjB;;IACH,MAAMe,GAAG,GAAG,MAAMC,KAAK,CAAC;MAACC,MAAM,EAAG,KAAV;MAAiBC,GAAG,EAAI,gCAA+BrB,IAAK;IAA5D,CAAD,CAAvB;;IACK,IAAGkB,GAAG,CAACI,IAAP,EAAY;MACR,IAAGJ,GAAG,CAACI,IAAJ,CAASC,GAAZ,EAAgB;QAAE;QAChBlB,MAAM,CAACK,OAAP,GAAiB,IAAjB;QACAc,UAAU;MACX;;MACD1B,OAAO,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAU,GAAGC,GAAG,CAACI,IAAJ,CAAS7B,IAAtB,CAAT,CAAP,CALQ,CAKsC;;MAC9CgC,aAAa,CAACf,OAAd,GAAwB,IAAxB;IACH,CAPD,MAOK;MACHgB,OAAO,CAACC,GAAR,CAAYT,GAAZ,EADG,CACe;IACnB;;IAEDf,OAAO,CAAC,KAAD,CAAP,CAjBqC,CAiBrB;EACjB,CAlB0B,EAkBxB,CAACH,IAAD,CAlBwB,CAA3B;EAoBH,oBACO,qCADP;AAKA,CAxDD;;GAAMR,O;;KAAAA,O;AA0DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}