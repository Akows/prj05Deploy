{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\pages\\\\join.js\",\n    _s = $RefreshSig$();\n\nimport '../style/Join.css';\nimport '../style/GlobalStyle.css';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Join = () => {\n  _s();\n\n  // 회원가입에 필요한 데이터를 변수로 제어할 useState 사용.\n  const [inputID, setInputID] = useState('');\n  const [inputPW, setInputPW] = useState('');\n  const [inputName, setInputName] = useState('');\n  const [inputEmail, setInputEmail] = useState(''); // 회원가입 Event.\n\n  const joinEvent = () => {\n    // 정보 입력란이 하나라도 비어있으면 경고를 출력하고 기능 정지.\n    if (inputID === '' || inputPW === '' || inputName === '' || inputEmail === '') {\n      alert('회원가입에 필요한 모든 정보가 충족되지 않았습니다.');\n    } // 그렇지 않으면 다음 작업으로 이동.\n    else {\n      // 비밀번호와 이메일 무결성 검사용 정규식.\n      var checkPasswordExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\n      var checkEmailExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i; // 정규식을 이용하여 입력한 비밀번호와 이메일을 검증.\n\n      var checkPassword = checkPasswordExp.test(inputPW);\n      var checkEmail = checkEmailExp.test(inputEmail); // 비밀번호 혹은 이메일 검증에 실패했을 경우 경고를 출력하고 작업 중단.\n\n      if (checkPassword === false) {\n        alert('비밀번호는 8-10자 영문, 숫자 조합으로만 가능합니다!');\n      } else if (checkEmail === false) {\n        alert('유효하지 않은 이메일 주소입니다!');\n      } else {\n        // 그렇지 않으면 회원가입 절차를 실행.\n        axios.post('/prj05/member/join', null, {\n          params: {\n            'MEMBER_ID': inputID,\n            'MEMBER_PW': inputPW,\n            'MEMBER_NAME': inputName,\n            'MEMBER_EMAIL': inputEmail\n          }\n        }) // 작업이 완료되거나 완료되지 않았을 경우 알림 문구를 출력한다.\n        // 이후 로그인 페이지로 이동하거나, 회원가입 페이지를 새로고침한다.\n        .then(() => {\n          alert('회원가입이 완료되었습니다.');\n          document.location.href = '/';\n        }).catch(res => {\n          alert('에러가 발생하였습니다.');\n          document.location.href = '/join';\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"join-pagebackground setcenter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-pageinner setcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"join-formarea gifont\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"join-title setcenter\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"join-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"join-inputtag gifont\",\n                value: inputID,\n                placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputID(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"join-inputtag gifont\",\n                value: inputPW,\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputPW(e.target.value);\n                },\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"join-inputtag gifont\",\n                value: inputName,\n                placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"join-inputtag gifont\",\n                value: inputEmail,\n                placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputEmail(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"join-buttontag gifont\",\n                onClick: joinEvent,\n                children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Join, \"1GvbLfk/tGd6xTD63NyCa/ty8N0=\");\n\n_c = Join;\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["useState","axios","Join","inputID","setInputID","inputPW","setInputPW","inputName","setInputName","inputEmail","setInputEmail","joinEvent","alert","checkPasswordExp","checkEmailExp","checkPassword","test","checkEmail","post","params","then","document","location","href","catch","res","e","target","value"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/join.js"],"sourcesContent":["import '../style/Join.css';\r\nimport '../style/GlobalStyle.css';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Join = () => {\r\n\r\n    // 회원가입에 필요한 데이터를 변수로 제어할 useState 사용.\r\n    const [inputID, setInputID] = useState('');\r\n    const [inputPW, setInputPW] = useState('');\r\n    const [inputName, setInputName] = useState('');\r\n    const [inputEmail, setInputEmail] = useState('');\r\n\r\n    // 회원가입 Event.\r\n    const joinEvent = () => {\r\n        // 정보 입력란이 하나라도 비어있으면 경고를 출력하고 기능 정지.\r\n        if (inputID === '' || inputPW === '' || inputName === '' || inputEmail === '') {\r\n            alert('회원가입에 필요한 모든 정보가 충족되지 않았습니다.');\r\n        }\r\n        // 그렇지 않으면 다음 작업으로 이동.\r\n        else {\r\n            // 비밀번호와 이메일 무결성 검사용 정규식.\r\n            var checkPasswordExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/;\r\n            var checkEmailExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n            \r\n            // 정규식을 이용하여 입력한 비밀번호와 이메일을 검증.\r\n            var checkPassword = checkPasswordExp.test(inputPW);\r\n            var checkEmail = checkEmailExp.test(inputEmail);\r\n    \r\n            // 비밀번호 혹은 이메일 검증에 실패했을 경우 경고를 출력하고 작업 중단.\r\n            if (checkPassword === false) {\r\n                alert('비밀번호는 8-10자 영문, 숫자 조합으로만 가능합니다!');\r\n            }\r\n            else if (checkEmail === false) {\r\n                alert('유효하지 않은 이메일 주소입니다!');\r\n            }\r\n            else {\r\n                // 그렇지 않으면 회원가입 절차를 실행.\r\n                axios.post('/prj05/member/join', null, {\r\n                    params: {\r\n                        'MEMBER_ID': inputID,\r\n                        'MEMBER_PW': inputPW,\r\n                        'MEMBER_NAME': inputName,\r\n                        'MEMBER_EMAIL': inputEmail\r\n                    }\r\n                })\r\n                // 작업이 완료되거나 완료되지 않았을 경우 알림 문구를 출력한다.\r\n                // 이후 로그인 페이지로 이동하거나, 회원가입 페이지를 새로고침한다.\r\n                .then(() => {\r\n                    alert('회원가입이 완료되었습니다.');\r\n                    document.location.href = '/';\r\n                })\r\n                .catch(res => {\r\n                    alert('에러가 발생하였습니다.');\r\n                    document.location.href = '/join';\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='join-pagebackground setcenter'>\r\n                <div className='join-pageinner setcenter'>\r\n                    <div className='join-formarea gifont'>\r\n                        <div className='join-title setcenter'>\r\n                            <h1>회원가입</h1>\r\n                        </div>\r\n                        <form>\r\n                            <div className='join-input'>\r\n                                <input type='text' className='join-inputtag gifont' value={inputID} placeholder='아이디를 입력해주세요' onChange={(e) => {setInputID(e.target.value)}}/>\r\n                                <input type='password' className='join-inputtag gifont' value={inputPW} placeholder='비밀번호를 입력해주세요' onChange={(e) => {setInputPW(e.target.value)}} autoComplete='off'/>\r\n                                <input type='text' className='join-inputtag gifont' value={inputName} placeholder='이름을 입력해주세요' onChange={(e) => {setInputName(e.target.value)}}/>\r\n                                <input type='text' className='join-inputtag gifont' value={inputEmail} placeholder='이메일 주소를 입력해주세요' onChange={(e) => {setInputEmail(e.target.value)}}/>\r\n                                <button className='join-buttontag gifont' onClick={joinEvent}>회원가입</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Join;"],"mappings":"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"},"metadata":{},"sourceType":"module"}