{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\nimport ContextProvider from './pages/contextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [isLogin, setIsLogin] = useState(false);\n  // const [whoLogin, setWhoLogin] = useState('익명사용자');\n  useEffect(() => {\n    // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n    if (sessionStorage.getItem('MEMBER_ID') === null) {} else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n      setIsLogin(true);\n      setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n  }, [isLogin]);\n  return (\n    /*#__PURE__*/\n    // <ContextProvider>\n    //   <BrowserRouter>\n    //     <Menubar isLogin={isLogin}/>\n    //     <Routes>\n    //       <Route path='/' element={<Main/>}/>\n    //       <Route path='/api' element={<Callapi/>}/>\n    //       <Route path='/todolist' element={<Todolist/>}/>\n    //       <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/boardview/:BOARD_NUMBER' element={<Boardview isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //     </Routes>\n    //   </BrowserRouter>\n    // </ContextProvider>\n    _jsxDEV(ContextProvider, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/api\",\n            element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todolist\",\n            element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/board\",\n            element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/boardview/:BOARD_NUMBER\",\n            element: /*#__PURE__*/_jsxDEV(Boardview, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/member\",\n            element: /*#__PURE__*/_jsxDEV(Member, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useEffect","useState","Menubar","Main","Callapi","Todolist","Board","Boardview","Member","ContextProvider","App","sessionStorage","getItem","setIsLogin","setWhoLogin","isLogin"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\nimport ContextProvider from './pages/contextProvider';\n\nfunction App() {\n\n  // const [isLogin, setIsLogin] = useState(false);\n  // const [whoLogin, setWhoLogin] = useState('익명사용자');\n\n  useEffect(() => {\n      // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n      // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n      if (sessionStorage.getItem('MEMBER_ID') === null) {\n          \n      } \n      else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n          setIsLogin(true);\n          setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n      }\n  }, [isLogin])\n\n  return (\n    // <ContextProvider>\n    //   <BrowserRouter>\n    //     <Menubar isLogin={isLogin}/>\n    //     <Routes>\n    //       <Route path='/' element={<Main/>}/>\n    //       <Route path='/api' element={<Callapi/>}/>\n    //       <Route path='/todolist' element={<Todolist/>}/>\n    //       <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/boardview/:BOARD_NUMBER' element={<Boardview isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //       <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n    //     </Routes>\n    //   </BrowserRouter>\n    // </ContextProvider>\n\n    <ContextProvider>\n      <BrowserRouter>\n        <Menubar/>\n        <Routes>\n          <Route path='/' element={<Main/>}/>\n          <Route path='/api' element={<Callapi/>}/>\n          <Route path='/todolist' element={<Todolist/>}/>\n          <Route path='/board' element={<Board/>}/>\n          <Route path='/boardview/:BOARD_NUMBER' element={<Boardview/>}/>\n          <Route path='/member' element={<Member/>}/>\n        </Routes>\n      </BrowserRouter>\n    </ContextProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA;EAEAV,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIW,cAAc,CAACC,OAAf,CAAuB,WAAvB,MAAwC,IAA5C,EAAkD,CAEjD,CAFD,MAGK;MACL;MACA;MACIC,UAAU,CAAC,IAAD,CAAV;MACAC,WAAW,CAACH,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,CAAX;IACH;EACJ,CAZQ,EAYN,CAACG,OAAD,CAZM,CAAT;EAcA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,QAAC,eAAD;MAAA,uBACE,QAAC,aAAD;QAAA,wBACE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,IAAD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,OAAO,eAAE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UAA5B;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE,QAAC,KAAD;YAAO,IAAI,EAAC,WAAZ;YAAwB,OAAO,eAAE,QAAC,QAAD;cAAA;cAAA;cAAA;YAAA;UAAjC;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,KAAD;YAAO,IAAI,EAAC,QAAZ;YAAqB,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAA9B;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE,QAAC,KAAD;YAAO,IAAI,EAAC,0BAAZ;YAAuC,OAAO,eAAE,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA;UAAhD;YAAA;YAAA;YAAA;UAAA,QALF,eAME,QAAC,KAAD;YAAO,IAAI,EAAC,SAAZ;YAAsB,OAAO,eAAE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAfF;AA6BD;;GAhDQL,G;;KAAAA,G;AAkDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}