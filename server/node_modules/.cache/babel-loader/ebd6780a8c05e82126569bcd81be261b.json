{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from 'react';\nimport '../style/Callapi.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Callapi = () => {\n  _s();\n\n  const options = {\n    root: null,\n    //기본 null, 관찰대상의 부모요소를 지정\n    rootMargin: \"20px\",\n    // 관찰하는 뷰포트의 마진 지정\n    threshold: 1.0 // 관찰요소와 얼만큼 겹쳤을 때 콜백을 수행하도록 지정하는 요소\n\n  };\n  useEffect(() => {\n    const observer = new IntersectionObserver(handleObserver, options);\n    if (interSectRef.current) observer.observe(interSectRef.current);\n    return () => observer.disconnect();\n  }, [handleObserver]);\n  const handleObserver = useCallback(async entries => {\n    const target = entries[0];\n\n    if (target.isIntersecting) {\n      console.log(\"is InterSecting\");\n      setPage(prev => prev + 1);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Callapi\"\n  }, void 0, false);\n};\n\n_s(Callapi, \"rzOZEVFB89svR1qn8GT5wd+5D9s=\");\n\n_c = Callapi;\nexport default Callapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Callapi\");","map":{"version":3,"names":["useCallback","useEffect","Callapi","options","root","rootMargin","threshold","observer","IntersectionObserver","handleObserver","interSectRef","current","observe","disconnect","entries","target","isIntersecting","console","log","setPage","prev"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/callapi.js"],"sourcesContent":["\r\nimport { useCallback, useEffect } from 'react';\r\nimport '../style/Callapi.css';\r\n\r\nconst Callapi = () => {\r\n\r\n    const options = {\r\n        root: null, //기본 null, 관찰대상의 부모요소를 지정\r\n        rootMargin: \"20px\", // 관찰하는 뷰포트의 마진 지정\r\n        threshold: 1.0, // 관찰요소와 얼만큼 겹쳤을 때 콜백을 수행하도록 지정하는 요소\r\n    };\r\n    useEffect(() => {\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        if (interSectRef.current) observer.observe(interSectRef.current);\r\n        return () => observer.disconnect();\r\n    }, [handleObserver]);\r\n\r\n    const handleObserver = useCallback(async (entries) => {\r\n        const target = entries[0];\r\n        if (target.isIntersecting) {\r\n          console.log(\"is InterSecting\");\r\n          setPage((prev) => prev + 1);\r\n        }\r\n      }, []);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            Callapi\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Callapi;"],"mappings":";;AACA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAO,sBAAP;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAMC,OAAO,GAAG;IACZC,IAAI,EAAE,IADM;IACA;IACZC,UAAU,EAAE,MAFA;IAEQ;IACpBC,SAAS,EAAE,GAHC,CAGI;;EAHJ,CAAhB;EAKAL,SAAS,CAAC,MAAM;IACZ,MAAMM,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,cAAzB,EAAyCN,OAAzC,CAAjB;IACA,IAAIO,YAAY,CAACC,OAAjB,EAA0BJ,QAAQ,CAACK,OAAT,CAAiBF,YAAY,CAACC,OAA9B;IAC1B,OAAO,MAAMJ,QAAQ,CAACM,UAAT,EAAb;EACH,CAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;EAMA,MAAMA,cAAc,GAAGT,WAAW,CAAC,MAAOc,OAAP,IAAmB;IAClD,MAAMC,MAAM,GAAGD,OAAO,CAAC,CAAD,CAAtB;;IACA,IAAIC,MAAM,CAACC,cAAX,EAA2B;MACzBC,OAAO,CAACC,GAAR,CAAY,iBAAZ;MACAC,OAAO,CAAEC,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP;IACD;EACF,CAN+B,EAM7B,EAN6B,CAAlC;EAUA,oBACI;IAAA;EAAA,iBADJ;AAKH,CA5BD;;GAAMlB,O;;KAAAA,O;AA8BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}