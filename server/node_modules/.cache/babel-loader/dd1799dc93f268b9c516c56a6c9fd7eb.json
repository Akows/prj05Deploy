{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { createContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  const [whoLogin, setWhoLogin] = useState('익명사용자');\n  const Context = /*#__PURE__*/createContext();\n  useEffect(() => {\n    // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n    // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n    if (sessionStorage.getItem('MEMBER_ID') === null) {} else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n      setIsLogin(true);\n      setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n    }\n  }, [isLogin]);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Menubar, {\n      isLogin: isLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/api\",\n        element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todolist\",\n        element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/board\",\n        element: /*#__PURE__*/_jsxDEV(Board, {\n          isLogin: isLogin,\n          whoLogin: whoLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/boardview/:BOARD_NUMBER\",\n        element: /*#__PURE__*/_jsxDEV(Boardview, {\n          isLogin: isLogin,\n          whoLogin: whoLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/member\",\n        element: /*#__PURE__*/_jsxDEV(Member, {\n          isLogin: isLogin,\n          whoLogin: whoLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"9JUhCOiJqpEI7/F/0MujqCV/xX4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","createContext","useEffect","useState","Menubar","Main","Callapi","Todolist","Board","Boardview","Member","App","isLogin","setIsLogin","whoLogin","setWhoLogin","Context","sessionStorage","getItem"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { createContext, useEffect, useState } from 'react';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false);\n  const [whoLogin, setWhoLogin] = useState('익명사용자');\n\n  const Context = createContext();\n\n  useEffect(() => {\n      // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n      // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 아무 일도 일어나지 않는다.\n      if (sessionStorage.getItem('MEMBER_ID') === null) {\n          \n      } \n      else {\n      // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환한다.\n      // 하위 컴포넌트에서 로그인 값을 필요로 할 경우, 여기서 전달해주면 된다.\n          setIsLogin(true);\n          setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n      }\n  }, [isLogin])\n\n  return (\n      <BrowserRouter>\n        <Menubar isLogin={isLogin}/>\n        <Routes>\n          <Route path='/' element={<Main/>}/>\n          <Route path='/api' element={<Callapi/>}/>\n          <Route path='/todolist' element={<Todolist/>}/>\n          <Route path='/board' element={<Board isLogin={isLogin} whoLogin={whoLogin}/>}/>\n          <Route path='/boardview/:BOARD_NUMBER' element={<Boardview isLogin={isLogin} whoLogin={whoLogin}/>}/>\n          <Route path='/member' element={<Member isLogin={isLogin} whoLogin={whoLogin}/>}/>\n        </Routes>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,OAAD,CAAxC;EAEA,MAAMa,OAAO,gBAAGf,aAAa,EAA7B;EAEAC,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIe,cAAc,CAACC,OAAf,CAAuB,WAAvB,MAAwC,IAA5C,EAAkD,CAEjD,CAFD,MAGK;MACL;MACA;MACIL,UAAU,CAAC,IAAD,CAAV;MACAE,WAAW,CAACE,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAD,CAAX;IACH;EACJ,CAZQ,EAYN,CAACN,OAAD,CAZM,CAAT;EAcA,oBACI,QAAC,aAAD;IAAA,wBACE,QAAC,OAAD;MAAS,OAAO,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,MAAZ;QAAmB,OAAO,eAAE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MAA5B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAjC;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAO,OAAO,EAAEA,OAAhB;UAAyB,QAAQ,EAAEE;QAAnC;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,0BAAZ;QAAuC,OAAO,eAAE,QAAC,SAAD;UAAW,OAAO,EAAEF,OAApB;UAA6B,QAAQ,EAAEE;QAAvC;UAAA;UAAA;UAAA;QAAA;MAAhD;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAsB,OAAO,eAAE,QAAC,MAAD;UAAQ,OAAO,EAAEF,OAAjB;UAA0B,QAAQ,EAAEE;QAApC;UAAA;UAAA;UAAA;QAAA;MAA/B;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaD;;GAjCQH,G;;KAAAA,G;AAmCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}