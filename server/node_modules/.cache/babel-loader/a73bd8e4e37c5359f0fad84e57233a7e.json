{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\pages\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport '../style/Main.css';\nimport '../style/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(false);\n  useEffect(() => {\n    if (sessionStorage.getItem('MEMBER_ID') === null) {\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\n      console.log('isLogin ?? :: ', isLogin);\n    } else {\n      // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\n      // 로그인 상태 변경\n      setIsLogin(true);\n      console.log('isLogin ?? :: ', isLogin);\n    }\n  }, [isLogin]);\n\n  const logout = () => {\n    // sessionStorage 에 user_id 로 저장되어있는 아이템을 삭제한다.\n    sessionStorage.removeItem('MEMBER_ID'); // App 으로 이동(새로고침)\n\n    document.location.href = '/';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLogin ? '로그인 됨' : '로그인 되지 않음.', /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-outer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-inner\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"'REM' Web Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"React - Express - MySQL(MariaDB)\\uB97C \\uD65C\\uC6A9\\uD55C \\uC6F9 \\uAC1C\\uBC1C \\uAC1C\\uC778 \\uD504\\uB85C\\uC81D\\uD2B8\\uC785\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC6F9 \\uAC1C\\uBC1C\\uC5D0\\uC11C \\uAC00\\uC7A5 \\uB300\\uC911\\uC801\\uC73C\\uB85C \\uC0AC\\uC6A9\\uB418\\uB294 \\uAE30\\uC220 \\uC2A4\\uD0DD\\uC744 \\uD65C\\uC6A9\\uD558\\uC5EC \\uAC04\\uB2E8\\uD55C \\uC6F9 \\uC0AC\\uC774\\uD2B8\\uB97C \\uB9CC\\uB4E4\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD68C\\uC6D0 \\uAE30\\uB2A5 (\\uD68C\\uC6D0\\uAC00\\uC785, \\uB85C\\uADF8\\uC778, \\uB85C\\uADF8\\uC544\\uC6C3) / \\uAC8C\\uC2DC\\uD310 \\uAE30\\uB2A5(\\uC6F9\\uC758 \\uC18C\\uC591 CRUD \\uAE30\\uB2A5\\uB4E4)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uC774\\uC678\\uC5D0 TodoList\\uC640 \\uACF5\\uACF5\\uB370\\uC774\\uD130\\uB97C \\uC774\\uC6A9\\uD55C API \\uD638\\uCD9C \\uAE30\\uB2A5\\uC744 \\uAD6C\\uD604\\uD574\\uBCF4\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Main, \"hT9YX5q3Ouj0n/k+Fvtlr/oV70A=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useEffect","useState","Main","isLogin","setIsLogin","sessionStorage","getItem","console","log","logout","removeItem","document","location","href"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/main.js"],"sourcesContent":["\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport '../style/Main.css';\r\nimport '../style/global.css';\r\n\r\nconst Main = () => {\r\n\r\n    const [isLogin, setIsLogin] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('MEMBER_ID') === null){\r\n        // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n            console.log('isLogin ?? :: ', isLogin)\r\n        } \r\n        else {\r\n        // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n        // 로그인 상태 변경\r\n            setIsLogin(true)\r\n            console.log('isLogin ?? :: ', isLogin)\r\n        }\r\n    }, [isLogin])\r\n\r\n    const logout = () => {\r\n        // sessionStorage 에 user_id 로 저장되어있는 아이템을 삭제한다.\r\n        sessionStorage.removeItem('MEMBER_ID')\r\n        // App 으로 이동(새로고침)\r\n        document.location.href = '/'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLogin ? '로그인 됨'  : '로그인 되지 않음.'}\r\n\r\n            <hr/>\r\n\r\n            <button onClick={logout}>로그아웃</button>\r\n\r\n            <div className='main-outer'>\r\n\r\n                <div className='main-inner'>\r\n\r\n                    <p>\r\n                        <h1>\r\n                            'REM' Web Project\r\n                        </h1>\r\n                        <h2>\r\n                            React - Express - MySQL(MariaDB)를 활용한 웹 개발 개인 프로젝트입니다.\r\n                        </h2>\r\n                        <h2>\r\n                            웹 개발에서 가장 대중적으로 사용되는 기술 스택을 활용하여 간단한 웹 사이트를 만들었습니다.\r\n                        </h2>\r\n                        <h2>\r\n                            회원 기능 (회원가입, 로그인, 로그아웃) / 게시판 기능(웹의 소양 CRUD 기능들)\r\n                        </h2>\r\n                        <h2>\r\n                            이외에 TodoList와 공공데이터를 이용한 API 호출 기능을 구현해보았습니다.\r\n                        </h2>\r\n\r\n                    </p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,mBAAP;AACA,OAAO,qBAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEf,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIK,cAAc,CAACC,OAAf,CAAuB,WAAvB,MAAwC,IAA5C,EAAiD;MACjD;MACIC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,OAA9B;IACH,CAHD,MAIK;MACL;MACA;MACIC,UAAU,CAAC,IAAD,CAAV;MACAG,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BL,OAA9B;IACH;EACJ,CAXQ,EAWN,CAACA,OAAD,CAXM,CAAT;;EAaA,MAAMM,MAAM,GAAG,MAAM;IACjB;IACAJ,cAAc,CAACK,UAAf,CAA0B,WAA1B,EAFiB,CAGjB;;IACAC,QAAQ,CAACC,QAAT,CAAkBC,IAAlB,GAAyB,GAAzB;EACH,CALD;;EAOA,oBACI;IAAA,WACKV,OAAO,GAAG,OAAH,GAAc,YAD1B,eAGI;MAAA;MAAA;MAAA;IAAA,QAHJ,eAKI;MAAQ,OAAO,EAAEM,MAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ,eAOI;MAAK,SAAS,EAAC,YAAf;MAAA,uBAEI;QAAK,SAAS,EAAC,YAAf;QAAA,uBAEI;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAOI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPJ,eAUI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAVJ,eAaI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAbJ;QAAA;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA,gBADJ;AA8CH,CAtED;;GAAMP,I;;KAAAA,I;AAwEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}