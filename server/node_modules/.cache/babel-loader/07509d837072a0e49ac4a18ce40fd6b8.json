{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\App.js\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\nimport StateManager from './pages/stateManager'; // export const myContext = createContext('defaultvalue');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  //   const [isLogin, setIsLogin] = useState(false);\n  //   const [whoLogin, setWhoLogin] = useState('');\n  //   React.useEffect(() => {\n  //     // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n  //         setIsLogin(false);\n  //     // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n  //     // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n  //     if (sessionStorage.getItem('MEMBER_ID') === null) {\n  //         setWhoLogin('익명사용자');\n  //     } \n  //     else {\n  //     // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n  //         setIsLogin(true);\n  //         setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n  //     }\n  // }, [])\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StateManager, {\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Menubar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/api\",\n            element: /*#__PURE__*/_jsxDEV(Callapi, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todolist\",\n            element: /*#__PURE__*/_jsxDEV(Todolist, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/board\",\n            element: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/boardview/:BOARD_NUMBER\",\n            element: /*#__PURE__*/_jsxDEV(Boardview, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/member\",\n            element: /*#__PURE__*/_jsxDEV(Member, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false) // <myContext.Provider value={ {isLogin, setIsLogin, whoLogin, setWhoLogin} }>\n  //   <BrowserRouter>\n  //       <Menubar/>\n  //       <Routes>\n  //         <Route path='/' element={<Main/>}/>\n  //         <Route path='/api' element={<Callapi/>}/>\n  //         <Route path='/todolist' element={<Todolist/>}/>\n  //         <Route path='/board' element={<Board/>}/>\n  //         <Route path='/boardview/:BOARD_NUMBER' element={<Boardview/>}/>\n  //         <Route path='/member' element={<Member/>}/>\n  //       </Routes>\n  //   </BrowserRouter>\n  // </myContext.Provider>\n  ;\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","Menubar","Main","Callapi","Todolist","Board","Boardview","Member","StateManager","App"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport Menubar from './pages/menubar';\nimport Main from './pages/main';\nimport Callapi from './pages/callapi';\nimport Todolist from './pages/todolist';\nimport Board from './pages/board';\nimport Boardview from './pages/boardview';\nimport Member from './pages/member';\n\nimport StateManager from './pages/stateManager';\n\n// export const myContext = createContext('defaultvalue');\n\nfunction App() {\n\n//   const [isLogin, setIsLogin] = useState(false);\n//   const [whoLogin, setWhoLogin] = useState('');\n\n//   React.useEffect(() => {\n//     // 웹이 실행되면 가장 먼저 isLogin을 false로 초기화.\n//         setIsLogin(false);\n\n//     // sessionStorage에 Item으로 담겨진 로그인값을 검증.\n//     // 로그인 값의 이름은 'MEMBER_ID', 이 값이 없을(null) 경우 whoLogin의 값을 '익명사용자'로 set.\n//     if (sessionStorage.getItem('MEMBER_ID') === null) {\n//         setWhoLogin('익명사용자');\n//     } \n//     else {\n//     // 이 값이 있을 경우 useState로 제어하는 isLogin의 값을 true로 전환하고 whoLogin을 로그인 한 유저의 ID값으로 변경한다.\n//         setIsLogin(true);\n//         setWhoLogin(sessionStorage.getItem('MEMBER_ID'));\n//     }\n// }, [])\n\n  return (\n    <>    \n      <StateManager>\n        <BrowserRouter>\n          <Menubar/>\n          <Routes>\n            <Route path='/' element={<Main/>}/>\n            <Route path='/api' element={<Callapi/>}/>\n            <Route path='/todolist' element={<Todolist/>}/>\n            <Route path='/board' element={<Board/>}/>\n            <Route path='/boardview/:BOARD_NUMBER' element={<Boardview/>}/>\n            <Route path='/member' element={<Member/>}/>\n          </Routes>\n        </BrowserRouter>\n      </StateManager>\n    </>\n\n\n      // <myContext.Provider value={ {isLogin, setIsLogin, whoLogin, setWhoLogin} }>\n      //   <BrowserRouter>\n      //       <Menubar/>\n      //       <Routes>\n      //         <Route path='/' element={<Main/>}/>\n      //         <Route path='/api' element={<Callapi/>}/>\n      //         <Route path='/todolist' element={<Todolist/>}/>\n      //         <Route path='/board' element={<Board/>}/>\n      //         <Route path='/boardview/:BOARD_NUMBER' element={<Boardview/>}/>\n      //         <Route path='/member' element={<Member/>}/>\n      //       </Routes>\n      //   </BrowserRouter>\n      // </myContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AAEA,OAAO,WAAP;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB,C,CAEA;;;;;AAEA,SAASC,GAAT,GAAe;EAEf;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEE,oBACE;IAAA,uBACE,QAAC,YAAD;MAAA,uBACE,QAAC,aAAD;QAAA,wBACE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,MAAD;UAAA,wBACE,QAAC,KAAD;YAAO,IAAI,EAAC,GAAZ;YAAgB,OAAO,eAAE,QAAC,IAAD;cAAA;cAAA;cAAA;YAAA;UAAzB;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,OAAO,eAAE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UAA5B;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE,QAAC,KAAD;YAAO,IAAI,EAAC,WAAZ;YAAwB,OAAO,eAAE,QAAC,QAAD;cAAA;cAAA;cAAA;YAAA;UAAjC;YAAA;YAAA;YAAA;UAAA,QAHF,eAIE,QAAC,KAAD;YAAO,IAAI,EAAC,QAAZ;YAAqB,OAAO,eAAE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UAA9B;YAAA;YAAA;YAAA;UAAA,QAJF,eAKE,QAAC,KAAD;YAAO,IAAI,EAAC,0BAAZ;YAAuC,OAAO,eAAE,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA;UAAhD;YAAA;YAAA;YAAA;UAAA,QALF,eAME,QAAC,KAAD;YAAO,IAAI,EAAC,SAAZ;YAAsB,OAAO,eAAE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA;UAA/B;YAAA;YAAA;YAAA;UAAA,QANF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF,CAkBI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA9BJ;AAgCD;;KArDQA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}