{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Archive\\\\Git Repo\\\\PrivateProject\\\\prj05\\\\client\\\\src\\\\pages\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport '../style/Login.css';\nimport '../style/GlobalStyle.css';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [inputID, setInputID] = useState('');\n  const [inputPW, setInputPW] = useState('');\n\n  const loginEvent = () => {\n    if (inputID === '' || inputPW === '') {\n      alert('아이디 혹은 비밀번호가 입력되지 않았습니다.');\n    } else {\n      alert('아이디와 비밀번호가 모두 입력되었습니다.');\n      console.log('inputID : ', inputID);\n      console.log('inputPW : ', inputPW);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-pagebackground setcenter\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-pageinner setcenter\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-formarea gifont\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-title setcenter\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\uC0AC\\uC6A9\\uC790 \\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"login-inputtag gifont\",\n                value: inputID,\n                placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputID(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"login-inputtag gifont\",\n                value: inputPW,\n                placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n                onChange: e => {\n                  setInputPW(e.target.value);\n                },\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"login-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"login-buttontag gifont\",\n                  onClick: loginEvent,\n                  children: \"\\uB85C\\uADF8\\uC778\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/test2',\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"login-buttontag gifont\",\n                    children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/test2',\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"login-buttontag gifont\",\n                    children: \"\\uB85C\\uADF8\\uC778\\uC0DD\\uB7B5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"7GstqpVraiummC+SiiP9kKaOlOY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Link","Login","inputID","setInputID","inputPW","setInputPW","loginEvent","alert","console","log","e","target","value"],"sources":["D:/Coding Archive/Git Repo/PrivateProject/prj05/client/src/pages/login.js"],"sourcesContent":["import '../style/Login.css';\r\nimport '../style/GlobalStyle.css';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\r\n    const [inputID, setInputID] = useState('');\r\n    const [inputPW, setInputPW] = useState('');\r\n\r\n    const loginEvent = () => {\r\n        if (inputID === '' || inputPW === '') {\r\n            alert('아이디 혹은 비밀번호가 입력되지 않았습니다.');\r\n        }\r\n        else {\r\n            alert('아이디와 비밀번호가 모두 입력되었습니다.');\r\n            console.log('inputID : ', inputID);\r\n            console.log('inputPW : ', inputPW);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='login-pagebackground setcenter'>\r\n                <div className='login-pageinner setcenter'>\r\n                    <div className='login-formarea gifont'>\r\n                        <div className='login-title setcenter'>\r\n                            <h1>사용자 로그인</h1>\r\n                        </div>\r\n                        <form>\r\n                            <div className='login-input'>\r\n                                <input type='text' className='login-inputtag gifont' value={inputID} placeholder='아이디를 입력해주세요' onChange={(e) => {setInputID(e.target.value)}}/>\r\n                                <input type='password' className='login-inputtag gifont' value={inputPW} placeholder='비밀번호를 입력해주세요' onChange={(e) => {setInputPW(e.target.value)}} autoComplete='off'/>\r\n                                \r\n                                <div className='login-button'>\r\n                                    <button className='login-buttontag gifont' onClick={loginEvent}>로그인</button>\r\n                                    <Link to={'/test2'}>\r\n                                    <button className='login-buttontag gifont'>회원가입</button>\r\n                                    </Link>\r\n                                    <Link to={'/test2'}>\r\n                                    <button className='login-buttontag gifont'>로그인생략</button>\r\n                                    </Link>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;"],"mappings":";;;AAAA,OAAO,oBAAP;AACA,OAAO,0BAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMO,UAAU,GAAG,MAAM;IACrB,IAAIJ,OAAO,KAAK,EAAZ,IAAkBE,OAAO,KAAK,EAAlC,EAAsC;MAClCG,KAAK,CAAC,0BAAD,CAAL;IACH,CAFD,MAGK;MACDA,KAAK,CAAC,wBAAD,CAAL;MACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,OAA1B;MACAM,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,OAA1B;IACH;EACJ,CATD;;EAWA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,gCAAf;MAAA,uBACI;QAAK,SAAS,EAAC,2BAAf;QAAA,uBACI;UAAK,SAAS,EAAC,uBAAf;UAAA,wBACI;YAAK,SAAS,EAAC,uBAAf;YAAA,uBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAII;YAAA,uBACI;cAAK,SAAS,EAAC,aAAf;cAAA,wBACI;gBAAO,IAAI,EAAC,MAAZ;gBAAmB,SAAS,EAAC,uBAA7B;gBAAqD,KAAK,EAAEF,OAA5D;gBAAqE,WAAW,EAAC,+DAAjF;gBAA+F,QAAQ,EAAGQ,CAAD,IAAO;kBAACP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;gBAA2B;cAA5I;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAO,IAAI,EAAC,UAAZ;gBAAuB,SAAS,EAAC,uBAAjC;gBAAyD,KAAK,EAAER,OAAhE;gBAAyE,WAAW,EAAC,qEAArF;gBAAoG,QAAQ,EAAGM,CAAD,IAAO;kBAACL,UAAU,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;gBAA2B,CAAjJ;gBAAmJ,YAAY,EAAC;cAAhK;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAII;gBAAK,SAAS,EAAC,cAAf;gBAAA,wBACI;kBAAQ,SAAS,EAAC,wBAAlB;kBAA2C,OAAO,EAAEN,UAApD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI,QAAC,IAAD;kBAAM,EAAE,EAAE,QAAV;kBAAA,uBACA;oBAAQ,SAAS,EAAC,wBAAlB;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAKI,QAAC,IAAD;kBAAM,EAAE,EAAE,QAAV;kBAAA,uBACA;oBAAQ,SAAS,EAAC,wBAAlB;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADA;kBAAA;kBAAA;kBAAA;gBAAA,QALJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AA8BH,CA9CD;;GAAML,K;;KAAAA,K;AAgDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}